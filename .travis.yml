dist: xenial

language: python

sudo: true

python:
  - "2.7"
  - "3.6"

services:
  - xvfb
  
env:
  global:
    - PIP_WHEEL_DIR=$HOME/.cache/pip/wheels
    - PIP_FIND_LINKS=file://$HOME/.cache/pip/wheels
    - GDALINST=$HOME/gdalinstall
    - GDALBUILD=$HOME/gdalbuild
    - PROJINST=$HOME/projinstall
    - PROJBUILD=$HOME/projbuild


  matrix:

    - GDALVERSION="1.11.5" PROJVERSION="4.8.0"
    - GDALVERSION="2.0.3" PROJVERSION="4.9.3"
    - GDALVERSION="2.1.4" PROJVERSION="4.9.3"
    - GDALVERSION="2.2.4" PROJVERSION="4.9.3"
    - GDALVERSION="2.3.3" PROJVERSION="4.9.3"
    - GDALVERSION="2.4.2" PROJVERSION="4.9.3"
    - GDALVERSION="3.0.1" PROJVERSION="6.1.1"
    - GDALVERSION="master" PROJVERSION="6.1.1"

    - GDALVERSION="1.11.5" PROJVERSION="4.8.0" FORCE_GDAL_BUILD="yes"
    - GDALVERSION="2.0.3" PROJVERSION="4.9.3" FORCE_GDAL_BUILD="yes"
    - GDALVERSION="2.1.4" PROJVERSION="4.9.3" FORCE_GDAL_BUILD="yes"
    - GDALVERSION="2.2.4" PROJVERSION="4.9.3" FORCE_GDAL_BUILD="yes"
    - GDALVERSION="2.3.3" PROJVERSION="4.9.3" FORCE_GDAL_BUILD="yes"
    - GDALVERSION="2.4.2" PROJVERSION="4.9.3" FORCE_GDAL_BUILD="yes"
    - GDALVERSION="3.0.1" PROJVERSION="6.1.1" FORCE_GDAL_BUILD="yes"
    - GDALVERSION="master" PROJVERSION="6.1.1" FORCE_GDAL_BUILD="yes"

matrix:
  allow_failures:
    - env: GDALVERSION="master" PROJVERSION="6.1.1"
    - env: GDALVERSION="master" PROJVERSION="6.1.1" FORCE_GDAL_BUILD="yes"


addons:
  apt:
    packages:
    - libhdf5-serial-dev
    - libatlas-dev
    - libatlas-base-dev
    - gfortran
    - libsqlite3-dev
    - sqlite3

    
before_install:
  - export DISTRIB_CODENAME=$(lsb_release -cs)
  - pip install -U pip
  - pip install wheel coveralls>=1.1 --upgrade
  - pip install setuptools==36.0.1
  - pip install wheel
  - export PATH=$GDALINST/gdal-$GDALVERSION/bin:$PROJINST/proj-$PROJVERSION/bin:$PATH
  - export LD_LIBRARY_PATH=$GDALINST/gdal-$GDALVERSION/lib:$PROJINST/proj-$PROJVERSION/lib:$LD_LIBRARY_PATH
  - . ./scripts/travis_proj_install.sh
  - . ./scripts/travis_gdal_install.sh
  - export GDAL_DATA=$GDALINST/gdal-$GDALVERSION/share/gdal
  - export PROJ_LIB=$PROJINST/proj-$PROJVERSION/share/proj
  - gdal-config --version


install:
  - pip install --upgrade --force-reinstall -r requirements-dev.txt
  - pip uninstall -y rasterio
  - "if [ \"$GDALVERSION\" == \"master\" -o $(gdal-config --version) == \"$GDALVERSION\" ]; then echo \"Using gdal $GDALVERSION\"; else echo \"NOT using gdal $GDALVERSION as expected; aborting\"; exit 1; fi"
  - "python -m pip install --upgrade --force-reinstall -r requirements-dev.txt"
  - "GDAL_CONFIG=$GDALINST/gdal-$GDALVERSION/bin/gdal-config python -m pip install --upgrade --force-reinstall --no-use-pep517 -e .[test,plot]"
  - "rio --version"
  - "rio --gdal-version"
  - "python -m pip list"

before_script:
  - "export DISPLAY=:99.0"
  - "sleep 3"

script:
  - "if [[ $TRAVIS_PYTHON_VERSION == 3.5 && $GDALVERSION == 2.1.0 ]]; then python -m pytest --doctest-ignore-import-errors --doctest-glob='*.rst' docs/*.rst -k 'not index and not quickstart and not switch' ; fi"
  - python -m pytest -v -m "not wheel" -rxXs --cov rasterio --cov-report term-missing

after_success:
  - coveralls || echo "!! intermittent coveralls failure"


#cache:
  #directories:
    #- $GDALINST
    #- ~/.cache/pip
